# Generated by Powerlevel10k configuration wizard on 2023-04-18 at 16:05 KST.
# Based on romkatv/powerlevel10k/config/p10k-lean.zsh, checksum 53788.
# Wizard options: nerdfont-complete + powerline, small icons, unicode, lean, 24h time,
# 2 lines, dotted, no frame, dark-ornaments, compact, few icons, concise,
# instant_prompt=verbose.
#
# Config for Powerlevel10k with lean prompt style. Type `p10k configure` to generate
# your own config based on it.
#
# Tip: Looking for a nice color? Here's a one-liner to print colormap.
#
#   for i in {0..255}; do print -Pn "%K{$i}  %k%F{$i}${(l:3::0:)i}%f " ${${(M)$((i%6)):#3}:+$'\n'}; done

# Temporarily change options.
'builtin' 'local' '-a' 'p10k_config_opts'
[[ ! -o 'aliases'         ]] || p10k_config_opts+=('aliases')
[[ ! -o 'sh_glob'         ]] || p10k_config_opts+=('sh_glob')
[[ ! -o 'no_brace_expand' ]] || p10k_config_opts+=('no_brace_expand')
'builtin' 'setopt' 'no_aliases' 'no_sh_glob' 'brace_expand'

() {
  emulate -L zsh -o extended_glob

  # Unset all configuration options. This allows you to apply configuration changes without
  # restarting zsh. Edit ~/.p10k.zsh and type `source ~/.p10k.zsh`.
  unset -m '(POWERLEVEL9K_*|DEFAULT_USER)~POWERLEVEL9K_GITSTATUS_DIR'

  # Zsh >= 5.1 is required.
  [[ $ZSH_VERSION == (5.<1->*|<6->.*) ]] || return

  # The list of segments shown on the left. Fill it with the most important segments.
  typeset -g POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(
    # =========================[ Line #1 ]=========================
    # os_icon               # os identifier
    dir                     # current directory
    vcs                     # git status
    # =========================[ Line #2 ]=========================
    newline                 # \n
    prompt_char             # prompt symbol
  )

  # The list of segments shown on the right. Fill it with less important segments.
  # Right prompt on the last prompt line (where you are typing your commands) gets
  # automatically hidden when the input line reaches it. Right prompt above the
  # last prompt line gets hidden if it would overlap with left prompt.
  typeset -g POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(
    # =========================[ Line #1 ]=========================
    status                  # exit code of the last command
    command_execution_time  # duration of the last command
    background_jobs         # presence of background jobs
    kubecontext             # current kubernetes context (https://kubernetes.io/)
    aws                     # aws profile (https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html)
    # =========================[ Line #2 ]=========================
    newline
    time                    # current time
  )

  # Other potential segments that can be added if needed
  #  node_version          # node.js version
  #  go_version            # go version (https://golang.org)
  #  rust_version          # rustc version (https://www.rust-lang.org)
  #  dotnet_version        # .NET version (https://dotnet.microsoft.com)
  #  php_version           # php version (https://www.php.net/)
  #  laravel_version       # laravel php framework version (https://laravel.com/)
  #  java_version          # java version (https://www.java.com/)
  #  package               # name@version from package.json (https://docs.npmjs.com/files/package.json)
  #  rbenv                  # ruby version from rbenv (https://github.com/rbenv/rbenv)
  #  rvm                    # ruby version from rvm (https://rvm.io)
  #  fvm                    # flutter version management (https://github.com/leoafarias/fvm)
  #  luaenv                 # lua version from luaenv (https://github.com/cehoffman/luaenv)
  #  jenv                   # java version from jenv (https://github.com/jenv/jenv)
  #  terraform              # terraform workspace (https://www.terraform.io)
  #  aws_eb_env             # aws elastic beanstalk environment (https://aws.amazon.com/elasticbeanstalk/)

  # Defines character set used by powerlevel10k. It's best to let `p10k configure` set it for you.
  typeset -g POWERLEVEL9K_MODE=nerdfont-complete
  # When set to `moderate`, some icons will have an extra space after them. This is meant to avoid
  # icon overlap when using non-monospace fonts. When set to `none`, spaces are not added.
  typeset -g POWERLEVEL9K_ICON_PADDING=none

  # Basic style options that define the overall look of your prompt. You probably don't want to
  # change them.
  typeset -g POWERLEVEL9K_BACKGROUND=                            # transparent background
  typeset -g POWERLEVEL9K_{LEFT,RIGHT}_{LEFT,RIGHT}_WHITESPACE=  # no surrounding whitespace
  typeset -g POWERLEVEL9K_{LEFT,RIGHT}_SUBSEGMENT_SEPARATOR=' '  # separate segments with a space
  typeset -g POWERLEVEL9K_{LEFT,RIGHT}_SEGMENT_SEPARATOR=        # no end-of-line symbol
  
  # Default Foreground (text) color - adjust this for dark background to make text more visible
  typeset -g POWERLEVEL9K_FOREGROUND=249  # Light gray for better visibility in dark themes

  # When set to true, icons appear before content on both sides of the prompt. When set
  # to false, icons go after content. If empty or not set, icons go before content in the left
  # prompt and after content in the right prompt.
  #
  # You can also override it for a specific segment:
  #
  #   POWERLEVEL9K_STATUS_ICON_BEFORE_CONTENT=false
  #
  # Or for a specific segment in specific state:
  #
  #   POWERLEVEL9K_DIR_NOT_WRITABLE_ICON_BEFORE_CONTENT=false
  typeset -g POWERLEVEL9K_ICON_BEFORE_CONTENT=true

  # Add an empty line before each prompt.
  typeset -g POWERLEVEL9K_PROMPT_ADD_NEWLINE=false

  # Connect left prompt lines with these symbols.
  typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=
  typeset -g POWERLEVEL9K_MULTILINE_NEWLINE_PROMPT_PREFIX=
  typeset -g POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX=
  # Connect right prompt lines with these symbols.
  typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_SUFFIX=
  typeset -g POWERLEVEL9K_MULTILINE_NEWLINE_PROMPT_SUFFIX=
  typeset -g POWERLEVEL9K_MULTILINE_LAST_PROMPT_SUFFIX=

  # The left end of left prompt.
  typeset -g POWERLEVEL9K_LEFT_PROMPT_FIRST_SEGMENT_START_SYMBOL=
  # The right end of right prompt.
  typeset -g POWERLEVEL9K_RIGHT_PROMPT_LAST_SEGMENT_END_SYMBOL=

  # Ruler, a.k.a. the horizontal line before each prompt. If you set it to true, you'll
  # probably want to set POWERLEVEL9K_PROMPT_ADD_NEWLINE=false above and
  # POWERLEVEL9K_MULTILINE_FIRST_PROMPT_GAP_CHAR=' ' below.
  typeset -g POWERLEVEL9K_SHOW_RULER=false
  typeset -g POWERLEVEL9K_RULER_CHAR='─'        # reasonable alternative: '·'
  typeset -g POWERLEVEL9K_RULER_FOREGROUND=240

  # Filler between left and right prompt on the first prompt line. You can set it to '·' or '─'
  # to make it easier to see the alignment between left and right prompt and to separate prompt
  # from command output. It serves the same purpose as ruler (see above) without increasing
  # the number of prompt lines. You'll probably want to set POWERLEVEL9K_SHOW_RULER=false
  # if using this. You might also like POWERLEVEL9K_PROMPT_ADD_NEWLINE=false for more compact
  # prompt.
  typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_GAP_CHAR='·'
  if [[ $POWERLEVEL9K_MULTILINE_FIRST_PROMPT_GAP_CHAR != ' ' ]]; then
    # The color of the filler.
    typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_GAP_FOREGROUND=240
    # Add a space between the end of left prompt and the filler.
    typeset -g POWERLEVEL9K_LEFT_PROMPT_LAST_SEGMENT_END_SYMBOL=' '
    # Add a space between the filler and the start of right prompt.
    typeset -g POWERLEVEL9K_RIGHT_PROMPT_FIRST_SEGMENT_START_SYMBOL=' '
    # Start filler from the edge of the screen if there are no left segments on the first line.
    typeset -g POWERLEVEL9K_EMPTY_LINE_LEFT_PROMPT_FIRST_SEGMENT_END_SYMBOL='%{%}'
    # End filler on the edge of the screen if there are no right segments on the first line.
    typeset -g POWERLEVEL9K_EMPTY_LINE_RIGHT_PROMPT_FIRST_SEGMENT_START_SYMBOL='%{%}'
  fi

  # Prompt symbol and configuration for promgt
  # ... [The rest of your p10k.zsh configuration] ...

  # Set up basic prompt segments foreground and background colors
  # Using direct ANSI color codes for maximum compatibility
  
  # Directory - bright blue to match ls colors
  typeset -g POWERLEVEL9K_DIR_FOREGROUND=33
  typeset -g POWERLEVEL9K_DIR_BACKGROUND="none"
  
  # Git branch - cyan on black
  typeset -g POWERLEVEL9K_VCS_BRANCH_FOREGROUND=81
  typeset -g POWERLEVEL9K_VCS_BRANCH_BACKGROUND="none"
  
  # Git clean - green on black
  typeset -g POWERLEVEL9K_VCS_CLEAN_FOREGROUND=82
  typeset -g POWERLEVEL9K_VCS_CLEAN_BACKGROUND="none"
  
  # Git modified - yellow on black
  typeset -g POWERLEVEL9K_VCS_MODIFIED_FOREGROUND=220
  typeset -g POWERLEVEL9K_VCS_MODIFIED_BACKGROUND="none"
  
  # Git untracked - blue on black
  typeset -g POWERLEVEL9K_VCS_UNTRACKED_FOREGROUND=39
  typeset -g POWERLEVEL9K_VCS_UNTRACKED_BACKGROUND="none"
  
  # Kubernetes - bright blue on black
  typeset -g POWERLEVEL9K_KUBECONTEXT_FOREGROUND=38
  typeset -g POWERLEVEL9K_KUBECONTEXT_BACKGROUND="none"
  
  # AWS profile - orange on black
  typeset -g POWERLEVEL9K_AWS_FOREGROUND=208
  typeset -g POWERLEVEL9K_AWS_BACKGROUND="none"
  
  # Prompt symbol
  typeset -g POWERLEVEL9K_PROMPT_CHAR_OK_VIINS_FOREGROUND=76
  typeset -g POWERLEVEL9K_PROMPT_CHAR_ERROR_VIINS_FOREGROUND=196
  
  # VCS branch icon
  typeset -g POWERLEVEL9K_VCS_BRANCH_ICON=' '
  
  # Various max values for git status
  typeset -g POWERLEVEL9K_VCS_STAGED_MAX_NUM=3
  typeset -g POWERLEVEL9K_VCS_UNSTAGED_MAX_NUM=3
  typeset -g POWERLEVEL9K_VCS_UNTRACKED_MAX_NUM=3
  typeset -g POWERLEVEL9K_VCS_CONFLICTED_MAX_NUM=3
  typeset -g POWERLEVEL9K_VCS_COMMITS_AHEAD_MAX_NUM=3
  typeset -g POWERLEVEL9K_VCS_COMMITS_BEHIND_MAX_NUM=3
  
  # Kubernetes settings
  typeset -g POWERLEVEL9K_KUBECONTEXT_SHOW_ON_COMMAND='kubectl|helm|kubens|kubectx|oc|istioctl|skaffold|stern|k'
  
  # Status indicators with high contrast colors
  typeset -g POWERLEVEL9K_STATUS_OK_FOREGROUND=76         # green
  typeset -g POWERLEVEL9K_STATUS_ERROR_FOREGROUND=196     # red
  typeset -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_FOREGROUND=178  # yellow
  typeset -g POWERLEVEL9K_BACKGROUND_JOBS_FOREGROUND=172  # light orange
  
  # Time, context, etc.
  typeset -g POWERLEVEL9K_TIME_FOREGROUND=247             # light gray
  typeset -g POWERLEVEL9K_TIME_BACKGROUND=0               # black
  
  # Context indicator
  typeset -g POWERLEVEL9K_CONTEXT_FOREGROUND=139          # medium purple
  typeset -g POWERLEVEL9K_CONTEXT_BACKGROUND=0            # black

  # Instant prompt mode.
  typeset -g POWERLEVEL9K_INSTANT_PROMPT=verbose

  # Hot reload allows you to change POWERLEVEL9K options after Powerlevel10k has been initialized.
  typeset -g POWERLEVEL9K_DISABLE_HOT_RELOAD=false

  # If p10k is already loaded, reload configuration.
  (( ! $+functions[p10k] )) || p10k reload
}

# Tell `p10k configure` which file it should overwrite.
typeset -g POWERLEVEL9K_CONFIG_FILE=${${(%):-%x}:a}

(( ${#p10k_config_opts} )) && setopt ${p10k_config_opts[@]}
'builtin' 'unset' 'p10k_config_opts'
